%% 换算四元数求pitch
clc
clear all
close all
data=[1.494	-0.393691818	0.590794362	-0.581680737	0.397009187	1.499	-0.403689764	0.581978098	-0.579365576	0.403325672	1.497	0.403745159	-0.57694928	-0.586545157	0.400105177	1.497	0.392087539	-0.566923033	-0.591534458	0.418273381
1.489	-0.396535836	0.580127283	-0.579810198	0.412349125	1.497	-0.393689237	0.590614299	-0.585624578	0.391442702	1.455	0.401445971	-0.579168242	-0.587818131	0.397335028	1.458	0.399707846	-0.578898	-0.590057008	0.396160915
1.494	-0.397445125	0.57942129	-0.579756445	0.412541884	1.503	-0.394751407	0.590070307	-0.585401137	0.391527609	1.434	0.401331916	-0.579467381	-0.588598123	0.395856663	1.437	0.399512461	-0.578881512	-0.59102332	0.394939774
1.494	-0.397651283	0.57907151	-0.579670644	0.412954704	1.502	-0.395076615	0.589867413	-0.585335483	0.391603466	1.428	0.401686069	-0.579388371	-0.588379438	0.395938195	1.429	0.399960806	-0.578761856	-0.590844741	0.394928549
1.505	-0.397738747	0.578885654	-0.579050856	0.413999269	1.514	-0.395197044	0.589897962	-0.584321355	0.392948145	1.396	0.401756246	-0.578960936	-0.590196251	0.39378235	1.403	0.399922499	-0.578785103	-0.592329715	0.39270257
1.444	-0.393573135	0.581842893	-0.5809031	0.411230621	1.452	-0.390656406	0.592504501	-0.586721171	0.389979815	1.502	0.403455988	-0.577891691	-0.586461022	0.399159028	1.504	0.401753578	-0.577988004	-0.588709325	0.397423276
1.454	-0.395384517	0.580747309	-0.580160746	0.412088772	1.464	-0.392384166	0.591796633	-0.586005646	0.390395689	1.467	0.401997558	-0.579311877	-0.587322708	0.397300578	1.469	0.399975936	-0.578478858	-0.589900561	0.396735163
1.458	-0.395620933	0.58064323	-0.579756205	0.41257758	1.468	-0.392736199	0.591289885	-0.585646274	0.391347661	1.447	0.401582368	-0.579003469	-0.587596045	0.3977656	1.451	0.399812662	-0.578867093	-0.589859906	0.396393764
1.465	-0.39604016	0.580318956	-0.579676885	0.412743031	1.474	-0.393641985	0.590958555	-0.585481598	0.391184449	1.428	0.402339546	-0.578467508	-0.588526814	0.396401844	1.435	0.400040379	-0.578567288	-0.590849959	0.395125188
1.469	-0.396740302	0.580077237	-0.579310181	0.41292523	1.479	-0.39385816	0.590970464	-0.585088369	0.39153705	1.414	0.402321456	-0.578741433	-0.589798115	0.394124325	1.416	0.400709823	-0.578117013	-0.591805711	0.393672907
1.426	-0.39378253	0.581833476	-0.581793892	0.409781639	1.434	-0.390534578	0.592545187	-0.58767043	0.3886083	1.507	0.404191414	-0.577473991	-0.586287293	0.399274719	1.511	0.401835803	-0.577496988	-0.588689263	0.398083117
1.438	-0.394858446	0.581189365	-0.580423431	0.411599769	1.447	-0.391562996	0.591923476	-0.586230791	0.390689748	1.472	0.402346974	-0.578735966	-0.587331937	0.397772283	1.477	0.400458318	-0.578478268	-0.589814995	0.396376462
1.444	-0.395496894	0.580713949	-0.58043801	0.41163726	1.452	-0.392509519	0.591681458	-0.585836643	0.390697783	1.449	0.402286907	-0.578729642	-0.587183306	0.398061567	1.453	0.400299121	-0.578344465	-0.589491783	0.39721245
1.448	-0.395958328	0.580602756	-0.579926147	0.412071724	1.459	-0.393065282	0.591334138	-0.5858806	0.390598956	1.433	0.402630729	-0.57840285	-0.587827122	0.397237855	1.438	0.400975837	-0.57808861	-0.590331552	0.395652114
1.45	-0.396321579	0.579831839	-0.580370348	0.412182609	1.461	-0.392862284	0.591044672	-0.586082016	0.390938988	1.415	0.40302353	-0.578329778	-0.589167324	0.394953878	1.422	0.401001787	-0.577935028	-0.591787787	0.393669766
1.401	-0.393767725	0.582208654	-0.582765604	0.407877816	1.408	-0.39014805	0.593323707	-0.588386371	0.386720773	1.514	0.404212132	-0.577247795	-0.585660169	0.400499317	1.515	0.402376642	-0.576654466	-0.588477484	0.399070064
1.42	-0.394612473	0.58178802	-0.580733184	0.410551659	1.43	-0.391337073	0.592507048	-0.58667366	0.389364495	1.475	0.403314854	-0.577754768	-0.586581777	0.399322396	1.48	0.4014089	-0.577305948	-0.589275127	0.397924065
1.429	-0.394283544	0.581558729	-0.580054183	0.412149337	1.438	-0.391322968	0.592306674	-0.585814979	0.390973079	1.455	0.402997459	-0.577949502	-0.587004739	0.398739084	1.459	0.400960873	-0.577699813	-0.589481407	0.397498397
1.43	-0.394778322	0.581228682	-0.579883118	0.412381941	1.44	-0.391345211	0.59210664	-0.585884929	0.391148952	1.444	0.401474497	-0.579136385	-0.587716107	0.397503526	1.446	0.399769185	-0.578787605	-0.58992548	0.396456095
1.431	-0.396452746	0.580500223	-0.581054482	0.410146803	1.437	-0.393196487	0.591160501	-0.586876813	0.389231796	1.419	0.403123345	-0.578035827	-0.588846527	0.395759926	1.424	0.401273589	-0.57742888	-0.591495521	0.394573751
1.39	-0.392641073	0.58233708	-0.581054832	0.411207728	1.399	-0.389730684	0.593321869	-0.586619106	0.389816853	1.517	0.404315819	-0.577602134	-0.585035131	0.400797192	1.519	0.401964611	-0.577371773	-0.587845879	0.399378905
1.406	-0.394364658	0.581619071	-0.58143946	0.410029179	1.416	-0.391051127	0.592500245	-0.587393709	0.388575741	1.479	0.404011953	-0.577572695	-0.58638018	0.399177165	1.483	0.401624487	-0.577414337	-0.589010763	0.397940667
1.409	-0.395091506	0.581036564	-0.58153125	0.410025143	1.418	-0.391549694	0.591933371	-0.587434934	0.388875198	1.457	0.403808122	-0.577865164	-0.587094813	0.397907696	1.461	0.401947661	-0.577466822	-0.589674105	0.396553398
1.413	-0.395498915	0.580701497	-0.58141763	0.410268107	1.421	-0.392058655	0.591683032	-0.587170434	0.389142753	1.453	0.404084329	-0.57798324	-0.5872085	0.397287562	1.454	0.402229606	-0.577335418	-0.589610856	0.396552894
1.418	-0.39512258	0.580986686	-0.579651266	0.412719066	1.428	-0.39178742	0.591930997	-0.585455682	0.391614551	1.422	0.404021515	-0.577718804	-0.588287354	0.396138343	1.429	0.401909411	-0.577519453	-0.590585005	0.39515751];

load_left = [   0      0     0     0     0     8     8     8     8     8    16    16    16    16    16    24    24    24    24    24    32    32     32    32    32] ;
load_right = [  0     8    16    24    32     0     8    16    24    32     0     8    16    24    32     0     8    16    24    32     0     8     16    24    32] ;
diff_left = -[  0         -0.0035    0.0020    0.0015    0.0130   -0.0485   -0.0375   -0.0335   -0.0270   -0.0225   -0.0665   -0.0540   -0.0485    -0.0430   -0.0410   -0.0920   -0.0715   -0.0630   -0.0615   -0.0625   -0.1020   -0.0855   -0.0830   -0.0795   -0.0735];
diff_right=-[   0       -0.0405   -0.0615   -0.0685   -0.0975    0.0060   -0.0290   -0.0480   -0.0655   -0.0820    0.0120   -0.0225   -0.0460    -0.0615   -0.0785    0.0175   -0.0195   -0.0400   -0.0520   -0.0755    0.0210   -0.0160   -0.0380   -0.0435   -0.0715];

idx = find(load_left < 8 | load_right < 8);
load_left(idx)=[];
load_right(idx)=[];
diff_left(idx)=[];
diff_right(idx)=[];
data(idx,:)=[];


for i = 1 : 4
    idx = (i-1)*5;
    %qw qx qy qz
    cam{i}=data( :,  [idx + 2: idx + 5])
end

diff_degree=zeros(4, length(cam{1}));
diff_degree2=zeros(4, length(cam{1}));

for i = 1 : length(cam{1})
    for j = 1 : 4 
        %每个相机的四元数，和第一个元素的逆
        q1 = cam{j}(1,:);
        qn = cam{j}(i,:);

        diff_R = quat2rotm(q1)*quat2rotm(qn).';
  %      rotm2axang(diff_R)%x y z theta
        eul = rotm2eul(diff_R, "XZY")/pi*180
        diff_degree(j,i)=eul(3);
        [axang] = rotm2axang(diff_R);
axis = axang(1:3)
angle = axang(4)/pi*180


        diff_degree2(j,i) = double((acosd((trace(quat2rotm(q1)*quat2rotm(qn)')-1)/2)));
        if i== 1
            diff_degree2(j,i)=0;
        else
            'sdfsdf'
        end
        double(acosd((trace(quat2rotm(q1)'*quat2rotm(qn))-1)/2))
    end
end


%% 上面构造的数据，已经放到excel里了

diff_degree.' %   就是还行的角度
load_left
load_right